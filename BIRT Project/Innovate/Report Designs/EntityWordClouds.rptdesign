<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.7.0.v201707031807</property>
    <property name="units">in</property>
    <property name="theme">ThemesReportItems31.Modern</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">/ThemesReportItems31.rptlibrary</property>
            <property name="namespace">ThemesReportItems31</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="DocumentDate" id="341">
            <property name="valueType">dynamic</property>
            <expression name="valueExpr" type="javascript">var year = BirtDateTime.year(dataSetRow["doc_date"]);&#13;
var month = "";&#13;
&#13;
switch (BirtDateTime.month(dataSetRow["doc_date"])){&#13;
	case 1:&#13;
		month = "January";&#13;
		break;&#13;
	case 2:&#13;
		month = "February";&#13;
		break;&#13;
	case 3:&#13;
		month = "March";&#13;
		break;&#13;
	case 4:&#13;
		month = "April";&#13;
		break;&#13;
	case 5:&#13;
		month = "May";&#13;
		break;&#13;
	case 6:&#13;
		month = "June";&#13;
		break;&#13;
	case 7:&#13;
		month = "July";&#13;
		break;&#13;
	case 8:&#13;
		month = "August";&#13;
		break;&#13;
	case 9:&#13;
		month = "September";&#13;
		break;&#13;
	case 10:&#13;
		month = "October";&#13;
		break;&#13;
	case 11:&#13;
		month = "November";&#13;
		break;&#13;
	case 12:&#13;
		month = "December";&#13;
		break;&#13;
}&#13;
var monthYear = year + " - " + month;&#13;
monthYear;</expression>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="linkedDataModelName">Text Analytics Data Model</property>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pTopN" id="367">
            <property name="valueType">static</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">100</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <data-mart-data-source name="Document Data Source" id="4">
            <property name="datamartURL">Data Objects/Text Analytics Data</property>
            <property name="accessType">latest</property>
        </data-mart-data-source>
    </data-sources>
    <property name="linkedDataModels">
        <data-mart-linked-data-model name="Text Analytics Data Model" id="368">
            <property name="dataSource">Document Data Source</property>
            <property name="dataObject">Text Analytics Data Model</property>
        </data-mart-linked-data-model>
    </property>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="orientation">auto</property>
        </simple-master-page>
    </page-setup>
    <body>
        <extended-item extensionName="HTMLControl" id="293">
            <method name="clientOnCreate"><![CDATA[var config = {

	wordColumn : "entity",
	wordSize: "EntityCount",
	min:100000000,
	max:0,
	
	/* the total number of word to display */
	wordCount : 500 			///  Controlled by the TOP N of the parameter
};

// If data binding is used, the data should be saved and transformed in order
// to fit the Word Cloud Chart map.
function dataTransfrom(cursor) {
	var rows = [];
	var count = 0;
	while (cursor.hasNext()) {
		if(config.wordCount != null &amp;&amp; count >= config.wordCount){
			break;
		}
		var dataObj = cursor.next();
		rows.push({word: dataObj[config.wordColumn], value: dataObj[config.wordSize]});
		count++;
		if (config.min> dataObj[config.wordSize])
			config.min = dataObj[config.wordSize];
		if (config.max < dataObj[config.wordSize])
			config.max = dataObj[config.wordSize];
	}
	return rows;
}

var containerId = this.getId();

var data = dataTransfrom(this.getDataCursor());

window["__draw_word_cloud"] = function(containerId, data, min, max) {
	//var colors = ["#4D4D4D", "#989898","#b8b8b8"];
	//var colors = ["#8cea9c", "#9ecc4c", "#75c6b1", "#2e988c", "#3578ad", "#93d6e2", "#66b0d1"];
	
	var colors = ['#2ca25f','#66c2a4','#b2e2e2'];
	
	//var typeSize = [14, 18, 24, 32, 40, 48, 60, 72, 96, 128, 144];
	var containerWidth = $("#" + containerId).width();
	var containerHeight = $("#" + containerId).height();

	var fontScale = d3.scale.linear()
                     .domain([min, max])
                     .range([9, 100]);
	
	var fill = d3.scale.linear()
	        .domain([max, min])
            .range(colors);

	d3.layout.cloud().size([ containerWidth, containerHeight ]).words(
			data.map(function(row) {
				//var idx = (row.value == max) ? typeSize.length : Math.floor(row.value / ((max - min) / typeSize.length));
				//console.log (row.word + " ( " + row.value + ") : index=" + idx + " : size= " + typeSize[idx -1]);

				return {
					text : row.word,
					size : fontScale( row.value )
				};
			})).padding(5).rotate(function() {
		return 0;
	}).font("Lato").fontSize(function(d) {
		return d.size;
	}).on("end", draw).start();


	function draw(words) {
		$("#" + containerId + " svg").remove();
		d3.select("#" + containerId).append("svg")
				.attr("width", containerWidth).attr("height", containerHeight).attr("class","wordcloud")
				.append("g").attr(
						"transform",
						"translate(" + containerWidth / 2 + ","
								+ containerHeight / 2 + ")").selectAll("text")
				.data(words).enter().append("text").style("font-size", function(d) {
							return d.size + "px";
						}).style("font-family", "Lato").style("font-size",function(d){
							return d.size + "px";
						}).style("fill", function(d, i) {
							return fill(data[i].value);
						}).attr("text-anchor", "middle").attr("transform", function(d) {
							return "translate(" + [ d.x, d.y ] + ") rotate("
									+ d.rotate + ")";
						}).text(function(d) {
					return d.text;
				});
	}
}

window["__data"] = data;
window["__containerId"] = containerId;

var downloadURL = 'js/d3-cloud-master/d3.layout.cloud.js';
head.load('https://d3js.org/d3.v2.min.js', this.getBirtResourceURL(downloadURL), function() {
	__draw_word_cloud(containerId, data, config.min, config.max);
});]]></method>
            <property name="groups">
                <data-group>
                    <property name="groupName">EntityGroup</property>
                    <expression name="keyExpr" type="javascript">data["entity"]</expression>
                    <property name="interval">none</property>
                    <property name="sortDirection">desc</property>
                </data-group>
            </property>
            <list-property name="filter">
                <structure>
                    <property name="operator">eq</property>
                    <expression name="expr" type="javascript">row["cartridge"]</expression>
                    <simple-property-list name="value1">
                        <value>"PN"</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">top-n</property>
                    <expression name="expr" type="javascript">row["EntityCount"]</expression>
                    <simple-property-list name="value1">
                        <value>params["pTopN"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">in</property>
                    <expression name="expr" type="javascript">row["doc_date"]</expression>
                    <simple-property-list name="value1">
                        <value>params["DocumentDate"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
            </list-property>
            <property name="summaryData">true</property>
            <property name="height">250px</property>
            <property name="width">100%</property>
            <expression name="bookmark" type="javascript">"WordCloudPN"</expression>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">entity</property>
                    <text-property name="displayName">entity</text-property>
                    <expression name="expression" type="javascript">dataSetRow["entity"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">EntityCount</property>
                    <property name="dataType">integer</property>
                    <simple-property-list name="aggregateOn">
                        <value>EntityGroup</value>
                    </simple-property-list>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["entity"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">cartridge</property>
                    <text-property name="displayName">cartridge</text-property>
                    <expression name="expression" type="javascript">dataSetRow["cartridge"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">doc_date</property>
                    <expression name="expression" type="javascript">var year = BirtDateTime.year(dataSetRow["doc_date"]);&#13;
var month = "";&#13;
&#13;
switch (BirtDateTime.month(dataSetRow["doc_date"])){&#13;
	case 1:&#13;
		month = "January";&#13;
		break;&#13;
	case 2:&#13;
		month = "February";&#13;
		break;&#13;
	case 3:&#13;
		month = "March";&#13;
		break;&#13;
	case 4:&#13;
		month = "April";&#13;
		break;&#13;
	case 5:&#13;
		month = "May";&#13;
		break;&#13;
	case 6:&#13;
		month = "June";&#13;
		break;&#13;
	case 7:&#13;
		month = "July";&#13;
		break;&#13;
	case 8:&#13;
		month = "August";&#13;
		break;&#13;
	case 9:&#13;
		month = "September";&#13;
		break;&#13;
	case 10:&#13;
		month = "October";&#13;
		break;&#13;
	case 11:&#13;
		month = "November";&#13;
		break;&#13;
	case 12:&#13;
		month = "December";&#13;
		break;&#13;
}&#13;
var monthYear = year + " - " + month;&#13;
monthYear;</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="linkedDataModel">Text Analytics Data Model</property>
        </extended-item>
        <extended-item extensionName="HTMLControl" id="353">
            <method name="clientOnCreate"><![CDATA[var config = {

	wordColumn : "entity",
	wordSize: "EntityCount",
	min:100000000,
	max:0,
	
	/* the total number of word to display */
	wordCount : 500 			///  Controlled by the TOP N of the parameter
};

// If data binding is used, the data should be saved and transformed in order
// to fit the Word Cloud Chart map.
function dataTransfrom(cursor) {
	var rows = [];
	var count = 0;
	while (cursor.hasNext()) {
		if(config.wordCount != null &amp;&amp; count >= config.wordCount){
			break;
		}
		var dataObj = cursor.next();
		rows.push({word: dataObj[config.wordColumn], value: dataObj[config.wordSize]});
		count++;
		if (config.min> dataObj[config.wordSize])
			config.min = dataObj[config.wordSize];
		if (config.max < dataObj[config.wordSize])
			config.max = dataObj[config.wordSize];
	}
	return rows;
}

var containerId = this.getId();

var data = dataTransfrom(this.getDataCursor());

window["__draw_word_cloud"] = function(containerId, data, min, max) {
	//var colors = ["#4D4D4D", "#989898","#b8b8b8"];
	//var colors = ["#8cea9c", "#9ecc4c", "#75c6b1", "#2e988c", "#3578ad", "#93d6e2", "#66b0d1"];
	
	var colors = ['#2ca25f','#66c2a4','#b2e2e2'];
	
	//var typeSize = [14, 18, 24, 32, 40, 48, 60, 72, 96, 128, 144];
	var containerWidth = $("#" + containerId).width();
	var containerHeight = $("#" + containerId).height();

	var fontScale = d3.scale.linear()
                     .domain([min, max])
                     .range([9, 100]);
	
	var fill = d3.scale.linear()
	        .domain([max, min])
            .range(colors);

	d3.layout.cloud().size([ containerWidth, containerHeight ]).words(
			data.map(function(row) {
				//var idx = (row.value == max) ? typeSize.length : Math.floor(row.value / ((max - min) / typeSize.length));
				//console.log (row.word + " ( " + row.value + ") : index=" + idx + " : size= " + typeSize[idx -1]);

				return {
					text : row.word,
					size : fontScale( row.value )
				};
			})).padding(5).rotate(function() {
		return 0;
	}).font("Lato").fontSize(function(d) {
		return d.size;
	}).on("end", draw).start();


	function draw(words) {
		$("#" + containerId + " svg").remove();
		d3.select("#" + containerId).append("svg")
				.attr("width", containerWidth).attr("height", containerHeight).attr("class","wordcloud")
				.append("g").attr(
						"transform",
						"translate(" + containerWidth / 2 + ","
								+ containerHeight / 2 + ")").selectAll("text")
				.data(words).enter().append("text").style("font-size", function(d) {
							return d.size + "px";
						}).style("font-family", "Lato").style("font-size",function(d){
							return d.size + "px";
						}).style("fill", function(d, i) {
							return fill(data[i].value);
						}).attr("text-anchor", "middle").attr("transform", function(d) {
							return "translate(" + [ d.x, d.y ] + ") rotate("
									+ d.rotate + ")";
						}).text(function(d) {
					return d.text;
				});
	}
}

window["__data"] = data;
window["__containerId"] = containerId;

var downloadURL = 'js/d3-cloud-master/d3.layout.cloud.js';
head.load('https://d3js.org/d3.v2.min.js', this.getBirtResourceURL(downloadURL), function() {
	__draw_word_cloud(containerId, data, config.min, config.max);
});

]]></method>
            <property name="groups">
                <data-group>
                    <property name="groupName">EntityGroup</property>
                    <expression name="keyExpr" type="javascript">data["entity"]</expression>
                    <property name="interval">none</property>
                    <property name="sortDirection">desc</property>
                </data-group>
            </property>
            <list-property name="filter">
                <structure>
                    <property name="operator">eq</property>
                    <expression name="expr" type="javascript">row["cartridge"]</expression>
                    <simple-property-list name="value1">
                        <value>"ON"</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">top-n</property>
                    <expression name="expr" type="javascript">row["EntityCount"]</expression>
                    <simple-property-list name="value1">
                        <value>params["pTopN"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">in</property>
                    <expression name="expr" type="javascript">row["doc_date"]</expression>
                    <simple-property-list name="value1">
                        <value>params["DocumentDate"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
            </list-property>
            <property name="summaryData">true</property>
            <property name="height">250px</property>
            <property name="width">100%</property>
            <expression name="bookmark" type="javascript">"WordCloudON"</expression>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">entity</property>
                    <text-property name="displayName">entity</text-property>
                    <expression name="expression" type="javascript">if (dataSetRow["entity"] !== null) {&#13;
	var theEntity = dataSetRow["entity"].replace("&amp;", " ");&#13;
	theEntity;&#13;
}&#13;
else null;</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">EntityCount</property>
                    <property name="dataType">integer</property>
                    <simple-property-list name="aggregateOn">
                        <value>EntityGroup</value>
                    </simple-property-list>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["entity"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">cartridge</property>
                    <text-property name="displayName">cartridge</text-property>
                    <expression name="expression" type="javascript">dataSetRow["cartridge"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">doc_date</property>
                    <expression name="expression" type="javascript">var year = BirtDateTime.year(dataSetRow["doc_date"]);&#13;
var month = "";&#13;
&#13;
switch (BirtDateTime.month(dataSetRow["doc_date"])){&#13;
	case 1:&#13;
		month = "January";&#13;
		break;&#13;
	case 2:&#13;
		month = "February";&#13;
		break;&#13;
	case 3:&#13;
		month = "March";&#13;
		break;&#13;
	case 4:&#13;
		month = "April";&#13;
		break;&#13;
	case 5:&#13;
		month = "May";&#13;
		break;&#13;
	case 6:&#13;
		month = "June";&#13;
		break;&#13;
	case 7:&#13;
		month = "July";&#13;
		break;&#13;
	case 8:&#13;
		month = "August";&#13;
		break;&#13;
	case 9:&#13;
		month = "September";&#13;
		break;&#13;
	case 10:&#13;
		month = "October";&#13;
		break;&#13;
	case 11:&#13;
		month = "November";&#13;
		break;&#13;
	case 12:&#13;
		month = "December";&#13;
		break;&#13;
}&#13;
var monthYear = year + " - " + month;&#13;
monthYear;</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="linkedDataModel">Text Analytics Data Model</property>
        </extended-item>
        <extended-item extensionName="HTMLControl" id="354">
            <method name="clientOnCreate"><![CDATA[var config = {

	wordColumn : "entity",
	wordSize: "EntityCount",
	min:100000000,
	max:0,
	
	/* the total number of word to display */
	wordCount : 500 			///  Controlled by the TOP N of the parameter
};

// If data binding is used, the data should be saved and transformed in order
// to fit the Word Cloud Chart map.
function dataTransfrom(cursor) {
	var rows = [];
	var count = 0;
	while (cursor.hasNext()) {
		if(config.wordCount != null &amp;&amp; count >= config.wordCount){
			break;
		}
		var dataObj = cursor.next();
		rows.push({word: dataObj[config.wordColumn], value: dataObj[config.wordSize]});
		count++;
		if (config.min> dataObj[config.wordSize])
			config.min = dataObj[config.wordSize];
		if (config.max < dataObj[config.wordSize])
			config.max = dataObj[config.wordSize];
	}
	return rows;
}

var containerId = this.getId();

var data = dataTransfrom(this.getDataCursor());

window["__draw_word_cloud"] = function(containerId, data, min, max) {
	//var colors = ["#4D4D4D", "#989898","#b8b8b8"];
	//var colors = ["#8cea9c", "#9ecc4c", "#75c6b1", "#2e988c", "#3578ad", "#93d6e2", "#66b0d1"];
	
	var colors = ['#2ca25f','#66c2a4','#b2e2e2'];
	
	//var typeSize = [14, 18, 24, 32, 40, 48, 60, 72, 96, 128, 144];
	var containerWidth = $("#" + containerId).width();
	var containerHeight = $("#" + containerId).height();

	var fontScale = d3.scale.linear()
                     .domain([min, max])
                     .range([9, 100]);
	
	var fill = d3.scale.linear()
	        .domain([max, min])
            .range(colors);

	d3.layout.cloud().size([ containerWidth, containerHeight ]).words(
			data.map(function(row) {
				//var idx = (row.value == max) ? typeSize.length : Math.floor(row.value / ((max - min) / typeSize.length));
				//console.log (row.word + " ( " + row.value + ") : index=" + idx + " : size= " + typeSize[idx -1]);

				return {
					text : row.word,
					size : fontScale( row.value )
				};
			})).padding(5).rotate(function() {
		return 0;
	}).font("Lato").fontSize(function(d) {
		return d.size;
	}).on("end", draw).start();


	function draw(words) {
		$("#" + containerId + " svg").remove();
		d3.select("#" + containerId).append("svg")
				.attr("width", containerWidth).attr("height", containerHeight).attr("class","wordcloud")
				.append("g").attr(
						"transform",
						"translate(" + containerWidth / 2 + ","
								+ containerHeight / 2 + ")").selectAll("text")
				.data(words).enter().append("text").style("font-size", function(d) {
							return d.size + "px";
						}).style("font-family", "Lato").style("font-size",function(d){
							return d.size + "px";
						}).style("fill", function(d, i) {
							return fill(data[i].value);
						}).attr("text-anchor", "middle").attr("transform", function(d) {
							return "translate(" + [ d.x, d.y ] + ") rotate("
									+ d.rotate + ")";
						}).text(function(d) {
					return d.text;
				});
	}
}

window["__data"] = data;
window["__containerId"] = containerId;

var downloadURL = 'js/d3-cloud-master/d3.layout.cloud.js';
head.load('https://d3js.org/d3.v2.min.js', this.getBirtResourceURL(downloadURL), function() {
	__draw_word_cloud(containerId, data, config.min, config.max);
});

]]></method>
            <property name="groups">
                <data-group>
                    <property name="groupName">EntityGroup</property>
                    <expression name="keyExpr" type="javascript">data["entity"]</expression>
                    <property name="interval">none</property>
                    <property name="sortDirection">desc</property>
                </data-group>
            </property>
            <list-property name="filter">
                <structure>
                    <property name="operator">eq</property>
                    <expression name="expr" type="javascript">row["cartridge"]</expression>
                    <simple-property-list name="value1">
                        <value>"GL"</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">top-n</property>
                    <expression name="expr" type="javascript">row["EntityCount"]</expression>
                    <simple-property-list name="value1">
                        <value>params["pTopN"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
                <structure>
                    <property name="operator">in</property>
                    <expression name="expr" type="javascript">row["doc_date"]</expression>
                    <simple-property-list name="value1">
                        <value>params["DocumentDate"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
            </list-property>
            <property name="summaryData">true</property>
            <property name="height">250px</property>
            <property name="width">100%</property>
            <expression name="bookmark" type="javascript">"WordCloudGL"</expression>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">entity</property>
                    <text-property name="displayName">entity</text-property>
                    <expression name="expression" type="javascript">dataSetRow["entity"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">EntityCount</property>
                    <property name="dataType">integer</property>
                    <simple-property-list name="aggregateOn">
                        <value>EntityGroup</value>
                    </simple-property-list>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["entity"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">cartridge</property>
                    <text-property name="displayName">cartridge</text-property>
                    <expression name="expression" type="javascript">dataSetRow["cartridge"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">doc_date</property>
                    <expression name="expression" type="javascript">var year = BirtDateTime.year(dataSetRow["doc_date"]);&#13;
var month = "";&#13;
&#13;
switch (BirtDateTime.month(dataSetRow["doc_date"])){&#13;
	case 1:&#13;
		month = "January";&#13;
		break;&#13;
	case 2:&#13;
		month = "February";&#13;
		break;&#13;
	case 3:&#13;
		month = "March";&#13;
		break;&#13;
	case 4:&#13;
		month = "April";&#13;
		break;&#13;
	case 5:&#13;
		month = "May";&#13;
		break;&#13;
	case 6:&#13;
		month = "June";&#13;
		break;&#13;
	case 7:&#13;
		month = "July";&#13;
		break;&#13;
	case 8:&#13;
		month = "August";&#13;
		break;&#13;
	case 9:&#13;
		month = "September";&#13;
		break;&#13;
	case 10:&#13;
		month = "October";&#13;
		break;&#13;
	case 11:&#13;
		month = "November";&#13;
		break;&#13;
	case 12:&#13;
		month = "December";&#13;
		break;&#13;
}&#13;
var monthYear = year + " - " + month;&#13;
monthYear;</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="linkedDataModel">Text Analytics Data Model</property>
        </extended-item>
        <table name="mySummaryTable" id="355">
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">entity</property>
                    <text-property name="displayName">Entity</text-property>
                    <expression name="expression" type="javascript">dataSetRow["doc_id"]</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">doc_date</property>
                    <text-property name="displayName">Document Date</text-property>
                    <expression name="expression" type="javascript">var year = BirtDateTime.year(dataSetRow["doc_date"]);&#13;
var month = "";&#13;
&#13;
switch (BirtDateTime.month(dataSetRow["doc_date"])){&#13;
	case 1:&#13;
		month = "January";&#13;
		break;&#13;
	case 2:&#13;
		month = "February";&#13;
		break;&#13;
	case 3:&#13;
		month = "March";&#13;
		break;&#13;
	case 4:&#13;
		month = "April";&#13;
		break;&#13;
	case 5:&#13;
		month = "May";&#13;
		break;&#13;
	case 6:&#13;
		month = "June";&#13;
		break;&#13;
	case 7:&#13;
		month = "July";&#13;
		break;&#13;
	case 8:&#13;
		month = "August";&#13;
		break;&#13;
	case 9:&#13;
		month = "September";&#13;
		break;&#13;
	case 10:&#13;
		month = "October";&#13;
		break;&#13;
	case 11:&#13;
		month = "November";&#13;
		break;&#13;
	case 12:&#13;
		month = "December";&#13;
		break;&#13;
}&#13;
var monthYear = year + " - " + month;&#13;
monthYear;</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Total Docs</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["entity"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="linkedDataModel">Text Analytics Data Model</property>
            <list-property name="filter">
                <structure>
                    <property name="operator">in</property>
                    <expression name="expr" type="javascript">row["doc_date"]</expression>
                    <simple-property-list name="value1">
                        <value type="javascript">params["DocumentDate"].value</value>
                    </simple-property-list>
                    <property name="updateAggregation">true</property>
                </structure>
            </list-property>
            <property name="isSummaryTable">true</property>
            <column id="364"/>
            <header>
                <row id="356">
                    <cell id="357">
                        <data id="366">
                            <property name="backgroundColor">white</property>
                            <property name="fontFamily">"Calibri"</property>
                            <property name="fontSize">32pt</property>
                            <property name="paddingTop">0pt</property>
                            <property name="paddingBottom">1pt</property>
                            <structure name="numberFormat">
                                <property name="category">Fixed</property>
                                <property name="pattern">#,##0{RoundingMode=HALF_UP}</property>
                            </structure>
                            <property name="textAlign">center</property>
                            <expression name="bookmark" type="javascript">"TotalDocsStat"</expression>
                            <property name="resultSetColumn">Total Docs</property>
                        </data>
                    </cell>
                </row>
            </header>
        </table>
    </body>
</report>
